{
  "title": "REST API V2",
  "version": "2.2.2-dev.1",
  "description": "A generic connector for accessing HTTP and REST APIs .",
  "authClientTypes": [
    "oauth2",
    "basic",
    "api_key",
    "noauth"
  ],
  "docsUrl": "https://github.com/elasticio/rest-api-component",
  "credentials": {
    "fields": {
      "auth": {
        "required": false,
        "viewClass": "HTTPAuthView"
      }
    }
  },
  "triggers": {
    "httpRequestAxiosTrigger": {
      "type": "polling",
      "main": "./src/triggers/httpRequest.js",
      "title": "HTTP Request (Axios Library)",
      "help": {
        "description": "Sends a GET, POST, PUT, or DELETE HTTP request and parses the response back to the flow.",
        "link": "/components/rest-api/index.html#http-request-axios"
      },
      "metadata": {
        "out": "./src/schemas/requestSchema.out.json"
      },
      "fields": {
        "reader": {
          "label": "REST API",
          "required": true,
          "viewClass": "RESTAPIView",
          "order": 95
        },
        "errorPolicy": {
          "label": "Error Handling Policy",
          "viewClass": "SelectView",
          "placeholder": "Retry by component",
          "model": {
            "byComponent": "Retry by component",
            "rebound": "Use rebound functionality",
            "throwError": "Don't retry (throw error)",
            "emit": "Emit error as message (don't throw errors)"
          },
          "help": {
            "description": "Default - <b>Retry by component</b>"
          },
          "order": 90
        },
        "errorCodes": {
          "label": "Error Codes for Error Handling Policy",
          "placeholder": "408, 423, 429, 500-599",
          "viewClass": "TextFieldView",
          "help": {
            "description": "A comma-separated list of codes or ranges. By default, the error handling policy is applied when you receive HTTP codes 408, 423, 429, and any codes from 500 onwards. You can override these default codes using this field.<br><br>Examples of valid entries:<br><b>Exact codes:</b> <br>401, 404, 503<br><br><b>Ranges:</b><br>400-401, 405-410, 502-509<br><br><b>Combinations:</b><br>403, 404, 500-599<br><br><b>Note:</b> You can only use codes above 299 here, and you cannot use code 401 if OAuth2 authentication is selected."
          },
          "order": 80
        },
        "ignoreErrorCodes": {
          "label": "Error Codes to emit as messages",
          "placeholder": "400, 402-404",
          "viewClass": "TextFieldView",
          "help": {
            "description": "A comma-separated list of codes or ranges. By default, this list is empty. When specified, the component will emit a message containing the error instead of throwing it upon receiving one of these codes. This feature is useful for handling specific errors gracefully without interrupting the workflow.<br><br>Note: These codes have higher priority than those specified in the <b>Error Codes for Error Handling Policy</b> and will ignore <b>Error Handling Policy</b>.<br><br>Examples of valid entries:<br><b>Exact codes:</b> <br>400, 402, 404<br><br><b>Ranges:</b><br>400-401, 402-404, 500-502<br><br><b>Combinations:</b><br>400, 401, 403-404<br><br><b>Note:</b> You can only use codes above 299 here, and you cannot use code 401 if OAuth2 authentication is selected."
          },
          "order": 78
        },
        "maxRetries": {
          "label": "Maximum Retries",
          "placeholder": "10",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Set the maximum number of retry attempts. This option works only when <b>Error Handling Policy</b> is set to <b><i>Retry by component</i></b>. Default and maximum value is 10."
          },
          "order": 77
        },
        "downloadAsAttachment": {
          "label": "Download as Attachment",
          "viewClass": "CheckBoxView",
          "help": {
            "description": "If checked, the component will download response data to internal storage as an attachment."
          },
          "order": 75
        },
        "uploadFile": {
          "label": "Upload File",
          "viewClass": "CheckBoxView",
          "help": {
            "description": "If checked, you will be able to upload data. Two options are available:<br><br>1. For body content type <b>application/octet-stream</b>, place the URL of the file from internal or external storage directly in the \"Body\" field as a string.<br><br>2. For body content type <b>multipart/form-data</b>, use any key as a string (e.g., \"file\") and the value as an object (switch this field to \"JSONata Mode\"). One of the object keys must be \"url\" with a link to the file.<br><br>Available parameters:<br><b>* url</b> (string, required) - link to the file from internal or external storage.<br><b>* filename</b> (string, optional) - name of the file.<br><b>* knownLength</b> (number, optional) - size of the file.<br><br>Example of a valid object:<div style=\"background-color:#E7E8EB;\">{<div style=\"margin-left:1em;\"><span style=\"color:#1d75b3;\">\"url\":</span> <span style=\"color:#b35e14;\">\"https://example.com/pic.jpg\"</span>,<br><span style=\"color:#1d75b3;\">\"filename\":</span> <span style=\"color:#b35e14;\">\"pic.jpg\"</span>,<br><span style=\"color:#1d75b3;\">\"knownLength\":</span> <span style=\"color:#75438a;\">15201</span></div>}</div>"
          },
          "order": 70
        },
        "noStrictSSL": {
          "label": "Do Not Verify SSL Certificate (Unsafe)",
          "viewClass": "CheckBoxView",
          "help": {
            "description": "Warning: This is an unsafe option! Check this box if you want to disable SSL certificate verification on the server."
          },
          "order": 65
        },
        "maxRedirects": {
          "label": "Maximum Redirects",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Defines the maximum number of redirects to follow, default is 5. If set to 0, no redirects will be followed."
          },
          "order": 60
        },
        "delay": {
          "label": "Delay in ms",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Delay the next request after the previous request. Maximum delay is 1140000 ms (19 minutes); default is 0."
          },
          "order": 55
        },
        "requestTimeoutPeriod": {
          "label": "Request Timeout",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Timeout period in milliseconds while the component waits for a server response. Should be a positive integer (1-1140000); defaults to 100000 ms (100 seconds)."
          },
          "order": 50
        },
        "maxContentLength": {
          "label": "Response Size Limit",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Maximum response size in bytes; maximum and default is 20MB for regular requests and 100MB for attachments (if <b>Download as Attachment</b> is checked)."
          },
          "order": 45
        },
        "maxBodyLength": {
          "label": "Request Size Limit",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Maximum size of the HTTP request content in bytes; unlimited by default."
          },
          "order": 40
        },
        "responseEncoding": {
          "label": "Response Encoding",
          "viewClass": "TextFieldView",
          "placeholder": "utf8",
          "help": {
            "description": "Indicates the encoding to use for decoding responses. By default, <b>utf8</b> is used, but in some cases, when you need to get data inside the message, you can use <b>base64</b>."
          },
          "order": 35
        }
      }
    },
    "httpRequestTrigger": {
      "deprecated": true,
      "main": "./lib/triggers/httpRequestTrigger.js",
      "title": "HTTP Request (Request Library)",
      "help": {
        "description": "Will send a GET/POST/PUT/DELETE HTTP request and parse the response back to the flow",
        "link": "/components/rest-api/index.html#http-request"
      },
      "type": "polling",
      "metadata": {
        "out": "./lib/schemas/requestSchema.out.json"
      },
      "fields": {
        "reader": {
          "label": "REST API",
          "required": true,
          "viewClass": "RESTAPIView"
        },
        "dontThrowErrorFlg": {
          "label": "Don`t throw Error on Failed Calls",
          "viewClass": "CheckBoxView"
        },
        "splitResult": {
          "label": "Split Result if it is an Array",
          "viewClass": "CheckBoxView",
          "note": "After making the request, and applying the above JSONata expression, if the result is an array and this box is checked, we will emit one message for each element of the array."
        },
        "enableRebound": {
          "label": "Retry on failure",
          "viewClass": "CheckBoxView"
        },
        "noStrictSSL": {
          "label": "Do not verify SSL certificate (unsafe)",
          "viewClass": "CheckBoxView"
        },
        "followRedirect": {
          "label": "Follow redirect mode",
          "viewClass": "SelectView",
          "model": {
            "followRedirects": "Follow redirects",
            "doNotFollowRedirects": "Do not follow redirects"
          },
          "prompt": "Follow redirects (default)"
        },
        "delay": {
          "label": "Delay",
          "viewClass": "TextFieldView",
          "note": "Delay calling the next request after the previous request. Time for the delay is calculated as `Delay`/ `Call Count` and shouldn't be more than 1140 seconds (19 minutes due to platform limitation). The `Call Count` value by default is 1. If you want to use another value, please set the `Call Count` field. "
        },
        "callCount": {
          "label": "Call Count",
          "viewClass": "TextFieldView",
          "note": "Value should be set only in pair with `Delay`, defaults to 1"
        },
        "requestTimeoutPeriod": {
          "label": "Request timeout",
          "viewClass": "TextFieldView",
          "note": "Timeout period in milliseconds while component waiting for server response, should be positive integer (1-1140000), defaults to 100000 (100 sec)"
        }
      }
    }
  },
  "actions": {
    "httpRequestAction": {
      "deprecated": true,
      "main": "./lib/actions/httpRequestAction.js",
      "title": "HTTP Request (Request Library)",
      "help": {
        "description": "Will send a GET/POST/PUT/DELETE HTTP request and parse the response back to the flow",
        "link": "/components/rest-api/index.html#http-request-1"
      },
      "metadata": {
        "out": "./lib/schemas/requestSchema.out.json"
      },
      "fields": {
        "reader": {
          "label": "REST API",
          "required": true,
          "viewClass": "RESTAPIView"
        },
        "dontThrowErrorFlg": {
          "label": "Don`t throw Error on Failed Calls",
          "viewClass": "CheckBoxView"
        },
        "splitResult": {
          "label": "Split Result if it is an Array",
          "viewClass": "CheckBoxView",
          "note": "After making the request, and applying the above JSONata expression, if the result is an array and this box is checked, we will emit one message for each element of the array."
        },
        "enableRebound": {
          "label": "Retry on failure",
          "viewClass": "CheckBoxView"
        },
        "noStrictSSL": {
          "label": "Do not verify SSL certificate (unsafe)",
          "viewClass": "CheckBoxView",
          "note": "Unsafe option! Check it if you want to disable SSL certificate verification on the server"
        },
        "followRedirect": {
          "label": "Follow redirect mode",
          "viewClass": "SelectView",
          "model": {
            "followRedirects": "Follow redirects",
            "doNotFollowRedirects": "Do not follow redirects"
          },
          "prompt": "Follow redirects (default)"
        },
        "delay": {
          "label": "Delay",
          "viewClass": "TextFieldView",
          "note": "Delay calling the next request after the previous request. Time for the delay is calculated as `Delay`/ `Call Count` and shouldn't be more than 1140 seconds (19 minutes due to platform limitation). The `Call Count` value by default is 1. If you want to use another value, please set the `Call Count` field. "
        },
        "callCount": {
          "label": "Call Count",
          "viewClass": "TextFieldView",
          "note": "Value should be set only in pair with `Delay`, defaults to 1"
        },
        "requestTimeoutPeriod": {
          "label": "Request timeout",
          "viewClass": "TextFieldView",
          "note": "Timeout period in milliseconds while component waiting for server response, should be positive integer (1-1140000), defaults to 100000 (100 sec)"
        }
      }
    },
    "httpRequestAxios": {
      "main": "./src/actions/httpRequest.js",
      "title": "HTTP Request (Axios Library)",
      "help": {
        "description": "Sends a GET, POST, PUT, or DELETE HTTP request and parses the response back to the flow.",
        "link": "/components/rest-api/index.html#http-request-axios"
      },
      "metadata": {
        "out": "./src/schemas/requestSchema.out.json"
      },
      "fields": {
        "reader": {
          "label": "REST API",
          "required": true,
          "viewClass": "RESTAPIView",
          "order": 95
        },
        "errorPolicy": {
          "label": "Error Handling Policy",
          "viewClass": "SelectView",
          "placeholder": "Retry by component",
          "model": {
            "byComponent": "Retry by component",
            "rebound": "Use rebound functionality",
            "throwError": "Don't retry (throw error)",
            "emit": "Emit error as message (don't throw errors)"
          },
          "help": {
            "description": "Default - <b>Retry by component</b>"
          },
          "order": 90
        },
        "errorCodes": {
          "label": "Error Codes for Error Handling Policy",
          "placeholder": "408, 423, 429, 500-599",
          "viewClass": "TextFieldView",
          "help": {
            "description": "A comma-separated list of codes or ranges. By default, the error handling policy is applied when you receive HTTP codes 408, 423, 429, and any codes from 500 onwards. You can override these default codes using this field.<br><br>Examples of valid entries:<br><b>Exact codes:</b> <br>401, 404, 503<br><br><b>Ranges:</b><br>400-401, 405-410, 502-509<br><br><b>Combinations:</b><br>403, 404, 500-599<br><br><b>Note:</b> You can only use codes above 299 here, and you cannot use code 401 if OAuth2 authentication is selected."
          },
          "order": 80
        },
        "ignoreErrorCodes": {
          "label": "Error Codes to emit as messages",
          "placeholder": "400, 402-404",
          "viewClass": "TextFieldView",
          "help": {
            "description": "A comma-separated list of codes or ranges. By default, this list is empty. When specified, the component will emit a message containing the error instead of throwing it upon receiving one of these codes. This feature is useful for handling specific errors gracefully without interrupting the workflow.<br><br>Note: These codes have higher priority than those specified in the <b>Error Codes for Error Handling Policy</b> and will ignore <b>Error Handling Policy</b>.<br><br>Examples of valid entries:<br><b>Exact codes:</b> <br>400, 402, 404<br><br><b>Ranges:</b><br>400-401, 402-404, 500-502<br><br><b>Combinations:</b><br>400, 401, 403-404<br><br><b>Note:</b> You can only use codes above 299 here, and you cannot use code 401 if OAuth2 authentication is selected."
          },
          "order": 78
        },
        "maxRetries": {
          "label": "Maximum Retries",
          "placeholder": "10",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Set the maximum number of retry attempts. This option works only when <b>Error Handling Policy</b> is set to <b><i>Retry by component</i></b>. Default and maximum value is 10."
          },
          "order": 77
        },
        "downloadAsAttachment": {
          "label": "Download as Attachment",
          "viewClass": "CheckBoxView",
          "help": {
            "description": "If checked, the component will download response data to internal storage as an attachment."
          },
          "order": 75
        },
        "uploadFile": {
          "label": "Upload File",
          "viewClass": "CheckBoxView",
          "help": {
            "description": "If checked, you will be able to upload data. Two options are available:<br><br>1. For body content type <b>application/octet-stream</b>, place the URL of the file from internal or external storage directly in the \"Body\" field as a string.<br><br>2. For body content type <b>multipart/form-data</b>, use any key as a string (e.g., \"file\") and the value as an object (switch this field to \"JSONata Mode\"). One of the object keys must be \"url\" with a link to the file.<br><br>Available parameters:<br><b>* url</b> (string, required) - link to the file from internal or external storage.<br><b>* filename</b> (string, optional) - name of the file.<br><b>* knownLength</b> (number, optional) - size of the file.<br><br>Example of a valid object:<div style=\"background-color:#E7E8EB;\">{<div style=\"margin-left:1em;\"><span style=\"color:#1d75b3;\">\"url\":</span> <span style=\"color:#b35e14;\">\"https://example.com/pic.jpg\"</span>,<br><span style=\"color:#1d75b3;\">\"filename\":</span> <span style=\"color:#b35e14;\">\"pic.jpg\"</span>,<br><span style=\"color:#1d75b3;\">\"knownLength\":</span> <span style=\"color:#75438a;\">15201</span></div>}</div>"
          },
          "order": 70
        },
        "noStrictSSL": {
          "label": "Do Not Verify SSL Certificate (Unsafe)",
          "viewClass": "CheckBoxView",
          "help": {
            "description": "Warning: This is an unsafe option! Check this box if you want to disable SSL certificate verification on the server."
          },
          "order": 65
        },
        "maxRedirects": {
          "label": "Maximum Redirects",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Defines the maximum number of redirects to follow, default is 5. If set to 0, no redirects will be followed."
          },
          "order": 60
        },
        "delay": {
          "label": "Delay in ms",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Delay the next request after the previous request. Maximum delay is 1140000 ms (19 minutes); default is 0."
          },
          "order": 55
        },
        "requestTimeoutPeriod": {
          "label": "Request Timeout",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Timeout period in milliseconds while the component waits for a server response. Should be a positive integer (1-1140000); defaults to 100000 ms (100 seconds)."
          },
          "order": 50
        },
        "maxContentLength": {
          "label": "Response Size Limit",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Maximum response size in bytes; maximum and default is 20MB for regular requests and 100MB for attachments (if <b>Download as Attachment</b> is checked)."
          },
          "order": 45
        },
        "maxBodyLength": {
          "label": "Request Size Limit",
          "viewClass": "TextFieldView",
          "help": {
            "description": "Maximum size of the HTTP request content in bytes; unlimited by default."
          },
          "order": 40
        },
        "responseEncoding": {
          "label": "Response Encoding",
          "viewClass": "TextFieldView",
          "placeholder": "utf8",
          "help": {
            "description": "Indicates the encoding to use for decoding responses. By default, <b>utf8</b> is used, but in some cases, when you need to get data inside the message, you can use <b>base64</b>."
          },
          "order": 35
        }
      }
    }
  }
}